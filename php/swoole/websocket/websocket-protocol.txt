## websocket协议学习

### 概述
协议分为两部分：握手，数据传输

客户端发出的握手信息类似：

```
GET /chat HTTP/1.1
Host: server.example.com
Upgrade: websocket
Connection: Upgrade
Sec-WebSocket-Key: dGhlIHNhbXBsZSBub25jZQ==
Origin: http://example.com
Sec-WebSocket-Protocol: chat, superchat
Sec-WebSocket-Version: 13
```

服务器发出的握手信息类似：

```
HTTP/1.1 101 Switching Protocols
Upgrade: websocket
Connection: Upgrade
Sec-WebSocket-Accept: s3pPLMBiTxaQ9kYGzzhZRbK+xOo=
Sec-WebSocket-Protocol: chat
```

两段信息的第一行大家应该都比较熟悉，是HTTP协议中的Request-Line和Status-Line，[RFC2616](https://tools.ietf.org/html/rfc2616)。下面接着出现的是无序的头信息，这和HTTP协议相同。 一旦握手成功，一个双向连接通道就建立了。
连接传输`message`, `message`由一个或多个`frame`组成。每个frame有一个类型，属于同一个message的frame的类型都相同。类型包括：文本，二进制，control frame(协议层信号)等。目前一共有6种类型，10种保留类型。

### 握手

根据上面的客户端头信息可以看出，握手和HTTP是兼容的。WS的握手是HTTP的"升级版本"。
Upgrade字段为websocket,可以看作是判断请求为ws的标志。

### 验证握手

取`Sec-WebSocket-Key `字段的值，连接一个GUID字符串,"258EAFA5-E914-47DA-95CA-C5AB0DC85B11", sha1 hash一下，再base64_encode，得到的值作为字段`Sec-WebSocket-Accept`的值返回给客户端。用php代码表示

```
'Sec-WebSocket-Accept' => base64_encode(sha1($key . static::GUID, true))
```

同时，返回的状态设置为101，其他状态都表示握手没有成功。 `Connection`,`Upgrade`字段作为HTTP升级版必须存在。一个握手返回如下：

```
HTTP/1.1 101 Switching Protocols
Upgrade: websocket
Connection: Upgrade
Sec-WebSocket-Accept: s3pPLMBiTxaQ9kYGzzhZRbK+xOo=
```

websocket包结构如下：
  0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 +-+-+-+-+-------+-+-------------+-------------------------------+
 |F|R|R|R| opcode|M| Payload len |    Extended payload length    |
 |I|S|S|S|  (4)  |A|     (7)     |             (16/64)           |
 |N|V|V|V|       |S|             |   (if payload len==126/127)   |
 | |1|2|3|       |K|             |                               |
 +-+-+-+-+-------+-+-------------+ - - - - - - - - - - - - - - - +
 |     Extended payload length continued, if payload len == 127  |
 + - - - - - - - - - - - - - - - +-------------------------------+
 |                               |Masking-key, if MASK set to 1  |
 +-------------------------------+-------------------------------+
 | Masking-key (continued)       |          Payload Data         |
 +-------------------------------- - - - - - - - - - - - - - - - +
 :                     Payload Data continued ...                :
 + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +
 |                     Payload Data continued ...                |
 +---------------------------------------------------------------+


接着写：https://tools.ietf.org/html/rfc6455#section-1.3
$string = "1abc123";
var_dump($string);
var_dump($string[0]);
var_dump(ord($string[0]));
var_dump(base_convert("95", 10, 16));
var_dump(pack("H*", base_convert("70", 10, 16)));