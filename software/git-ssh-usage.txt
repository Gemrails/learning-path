https://help.github.com/articles/generating-ssh-keys/ 

git remote set-url orgin git@github.com:user/repo.git

git push orgin master
#Everything update

git pull
# to get things from repo


Git分支使用
参考：https://www.atlassian.com/git/tutorials/using-branches/git-merge
查看status，包括修改情况等：
git status
查看当前所在的分支：
git branch
创建一个新的分支，并且checkout：
git checkout -b <new branch name>
创建分支：
git branch <new branch name>
进入该分支：
git checkout <new branch name>
创建完分支，进入分支后，就可以开始正常开发，edit, git add, git commit，循环。
需要合并分支时候,先进入master，再合并：
git checkout master
git merge <new branch name> #表示，把<new branch name>合并到master
这时候有两种合并方法，git会自动判断使用哪种
第一种为fast-forward：
当<new branch name>和master没有冲突时候（称之为liner，线性），采用fast-forward，本质就是把master指向<new branch name>最新的那个commit，就完成了。
第二种是3-way merge：
也就是<new branch name>和master有冲突，产生分歧了（diverged），那么会提示出现冲突，如下
[jason@localhost learngit]$ git merge new-branch
Auto-merging newBranch.txt
CONFLICT (content): Merge conflict in newBranch.txt
Automatic merge failed; fix conflicts and then commit the result.

这时候需要手动修复冲突，方法为edit/stage/commit workflow,应该很熟悉了。提交完冲突，这时master就合并完成了。



windows下，把Git的安装目录下bin文件夹放到PATH下非常有必要，因为bin下包含了很多bash里常用的命令工具，例如ls, mkdir, grep, cp, rm 等


删除git stage中的文件，目录：
git rm --cached -r dir
git rm --cached file
--cached表示只删除代码仓库中的，而不改动文件系统中的文件,目录


版本回退：
git log 查看提交的版本
git reset --hard {commit id} 回退
git push 会报错，说 current branch is behind
git push -f 强制提交

## Git 本地合并commit

假设想要合并最近三个commit
git rebase -i HEAD~3

会出现最近三次的commit信息，保留第一行不变，剩下的两行前面的命令改为 `s` or `squash`，wq退出
出现提示输入合并后的message，wq退出。结果就是三次commit合并为一次了。


Git 小技巧
有时为了保存多个工作状态，会使用多次commit （4次），将状态提交到本地仓库，但是在完成编码后，本想git push 最后的状态给时，本地的每次提交都会在远程仓库也有一个对应的提交（也有4次），造成服务器上出现不必要的版本， 如何处理此问题？使得本地4次，远程1次？
思路： git似乎没有直接方法处理这个问题，不过可以考虑在本地建立多分支。 即：

为本地的四次提交建立一个分支名，以保证其状态得以记录。
然后，git reset --soft commit-id 将远程Head指向到4次提交前的状态。
本地再次提交，此时由于Head指向四次前，而working Directory是四次修改提交之后的，此时git commit 就可以完成一次完成四次的提交。 这样既保证了本地有个分支记录了四次历史，同时保证服务器上只更新了一次，且状态一致。
命令如下：

git checkout -b branch_name 先命名新分支，保证当前分支的四次提交以后即使不记得commit id任然可以查找到。
git reset --soft commit-id指定四次前的id，回退HEAD， 而index和working directory 都是最新的。此时可以进行commit。
git diff查看下状态
git log 确认git 提交历史
git commit -m "4 in one"
git push remote-name local_branch:/refs/for/remote_branch
以上错误。
应该是这样：首先git log查看最后一次的commit id， 然后 数一下要退回的commit 次数，直接git reset --mixed HEAD~N， 让头部退回， 但是index 和 working dir 保持最新。再次直接commit 即可。