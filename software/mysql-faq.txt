通过控制dump的缓冲，提高source导入的效率
mysqldump -uroot -p'123' --all-database --max_allowed_packet=1047552 --net_buffer_length=16384 >all.sql

导出某一张表
mysqldump -uroot -pdbpasswd dbname test>db.sql;
mysqldump -uroot -pFXRTNVMfBhdQTRnc 99kk tags > tags.sql;

查看所有用户：
SELECT DISTINCT CONCAT('User: ''',user,'''@''',host,''';') AS query FROM mysql.user;

新建用户：
CREATE USER 'jason'@'%' IDENTIFIED BY 'jason';

分配权限
grant all privileges on *.* to jason;
grant all privileges on *.* to vagrant@"%" identified by 'being2015' with grant option;
flush privileges;

创建数据库
CREATE DATABASE `test2` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci
CREATE DATABASE `wechat` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci
导入sql
mysql -u -p database < sql_file.sql;
mysql> source /path/to/sql_file.sql;

添加字段：
alter table t_name add new_id int unsigned not null default 0;

改变字段varchar长度：
ALTER TABLE <table_name> MODIFY <col_name> VARCHAR(65536);

查看当前AUTO_INCREMENT的值
SELECT `AUTO_INCREMENT`
FROM  INFORMATION_SCHEMA.TABLES
WHERE TABLE_SCHEMA = '99kk'
AND   TABLE_NAME   = 'tags';

设置AUTO_INCREMENT
ALTER TABLE tbl AUTO_INCREMENT = 5;

删除前100行
DELETE from table_name where col_name limit 100

横向分表，从A表中复制一部分数据到B表
INSERT INTO recipe_info(recipe_id,
picture, intro, main_material, condiment,
 `procedure`, tips, tool) 
SELECT id, picture, intro, main_material,
condiment, `procedure`, tips, tool
from recipe

删除字段
alter table `recipe` drop column `col_name`

查看当前连接状态
show full processlist;

函数：
GROUP_CONCAT() 用逗号把group聚合的值连接
SUBSTRING_INDEX('www.abc.com', ',', 2) 根据分隔符，取n个值, n可以为负数,代表从右往左计算,结果为'www.abc'
优化笔记：
更新表（代替where in的做法，用join）
子查询：
update picture_infos set tag_ids = "0en"
where picture_id in (select picture_id from tag_en_pic)
用where in太慢了，会对picture_infos中的id取出来去和子查询里的每一条对比
JOIN查询：（如果p.tag_ids加索引会更快，避免了picture_infos的全表扫描）
UPDATE picture_infos as p
INNER JOIN tag_en_pic as t 
ON p.picture_id = t.picture_id AND p.tag_ids="0" 
SET p.tag_ids = "0en"
关于where not in,一样用join去解决, 左连表之后，右表连接字段为NULL的，就是我们需要的
SELECT * FROM customers 
LEFT JOIN orders ON customers.customers_id = orders.customers_id
WHERE orders.customers_id IS NULL

# 查看 DB 占磁盘大小
SELECT table_schema "DB Name", Round(Sum(data_length + index_length) / 1024 / 1024, 1) "DB Size in MB" FROM  information_schema.tables GROUP  BY table_schema; 

# 添加索引
alter table `affi_conversion_201701` add index `idnex_day` (`pay_time_day`);

# 查看mysql连接数
show status where `variable_name` = 'Threads_connected';